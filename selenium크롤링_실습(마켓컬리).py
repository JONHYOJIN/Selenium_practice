# -*- coding: utf-8 -*-
"""Selenium크롤링 실습(마켓컬리).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MgUEAoCpSTqwTFgu4Ux9WmTkUM9HfBRv
"""

!pip install selenium
!apt-get update
!apt install chromium-chromedriver

!cp C:/Users/hyoji/chromedriver_win32

import sys
sys.path.insert(0, 'C:/Users/hyoji/chromedriver_win32')

from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
import time
import pandas as pd

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
chrome_options.add_argument('--disable-dev-shm-usage')

"""## 'scraping_menu( )' : 밀키트 상품명, 가격 스크래핑"""

def scraping_menu():
  wd = webdriver.Chrome('chromedriver', options = chrome_options)
  
  search_url = "https://www.kurly.com/shop/goods/goods_search.php?searched=Y&log=1&skey=all&hid_pr_text=&hid_link_url=&edit=Y&sword=%B9%D0%C5%B0%C6%AE&x=0&y=0"
  wd.get(search_url)    #마켓컬리 '밀키트' 검색화면
  wd.implicitly_wait(10)

  page_idx = 0

  mk_menus = []   #상품명
  mk_prices = []  #가격

  while True:
    page_idx+=1   #페이지 인덱스
    for num in range(1,100):
      try:
        mk_menus.append(wd.find_element_by_css_selector('#goodsList > div.list_goods > div > ul > li:nth-child('+str(num)+') > div > a > span.name').text)
      except:
        pass
      
      try:
        mk_prices.append(wd.find_element_by_css_selector('#goodsList > div.list_goods > div > ul > li:nth-child('+str(num)+') > div > a > span.cost > span').text)
      except:
        pass


    if page_idx==4:
      break
    
    wd.find_element_by_css_selector('#goodsList > div.layout-pagination > div > a.layout-pagination-button.layout-pagination-next-page').click()  #다음 페이지 클릭
    wd.implicitly_wait(10)

  wd.close()   

  return mk_menus, mk_prices

menus, prices = scraping_menu()
print(menus)

len(prices)

"""## 상품별 리뷰 수집"""

# 페이지에서 이름 클릭
# 리뷰 페이지에서 위에 두개는 제거//는 나중에
# 리뷰 20개씩
# 다음 페이지 클릭

def get_info(num):

  result = []

  wd.find_element_by_css_selector('#goodsList > div.list_goods > div > ul > li:nth-child('+str(num)+') > div > div > div > button').click()  #상품 페이지 클릭
  wd.implicitly_wait(10)

  # unit        판매단위
  # weight      중량/용량
  # shipping    배송구분
  # origin      원산지
  # packaging   포장타입
  # shelf_life  유통기한
  # guide       안내사항

  unit = mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl.list.fst > dd').text
  time.sleep(1)
  weight = mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(2) > dd').text
  time.sleep(1)
  shipping = mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(3) > dd').text
  time.sleep(1)
  origin = mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(4) > dd').text
  time.sleep(1)
  packaging = mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(5) > dd').text
  time.sleep(1)
  shelf_life = mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(6) > dd').text
  time.sleep(1)
  guide = mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(7) > dd').text
  time.sleep(1)


  result = [unit, weight, shipping, origin, packaging, shelf_life, guide]

  return result

def get_reviews(num):

  reviews = []
  reviewers = []
  review_dates = []
  review_helps = []
  review_views = []

  wd.find_element_by_css_selector('#goodsList > div.list_goods > div > ul > li:nth-child('+str(num)+') > div > a > span.name').click()  #상품 페이지 클릭
  wd.implicitly_wait(10)

  for page in range(1,4):
    for rv_idx in range(6,13):
      try:
        reviews.append(wd.find_element_by_css_selector('contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td.subject > div.fst').text)
      except:
        pass
      try:
        reviewers.append(wd.find_element_by_css_selector('contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td:nth-child(9)').text)
      except:
        pass
      try:
        review_dates.append(wd.find_element_by_css_selector('contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td.time').text)
      except:
        pass
      try:
        review_helps.append(wd.find_element_by_css_selector('#contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td:nth-child(11) > span').text)
      except:
        pass
      try:
        review_views.append(wd.find_element_by_css_selector('#contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td:nth-child(12) > span').text)
      except:
        pass

    wd.find_element_by_css_selector('#contents-wrapper > div.board_pg_area > a.layout-pagination-button.layout-pagination-next-page').click()
    wd.implicitly_wait(10)

  return reviews, reviewers, review_dates, review_helps, review_views

def scraping_all():
  wd = webdriver.Chrome('chromedriver', options = chrome_options)
  
  search_url = "https://www.kurly.com/shop/goods/goods_search.php?searched=Y&log=1&skey=all&hid_pr_text=&hid_link_url=&edit=Y&sword=%B9%D0%C5%B0%C6%AE&x=0&y=0"
  wd.get(search_url)    #마켓컬리 '밀키트' 검색화면
  wd.implicitly_wait(10)

  page_idx = 0

  mk_menus = []   #상품명
  mk_prices = []  #가격

  mk_units = []
  mk_weights = []
  mk_shippings = []
  mk_origins = []
  mk_packagings = []
  mk_shelf_lifes = []
  mk_giudes = []

  while True:
    page_idx+=1   #페이지 인덱스
    for num in range(1,100):
      
      try:
        mk_menus.append(wd.find_element_by_css_selector('#goodsList > div.list_goods > div > ul > li:nth-child('+str(num)+') > div > a > span.name').text)
      except:
        pass
      
      try:
        mk_prices.append(wd.find_element_by_css_selector('#goodsList > div.list_goods > div > ul > li:nth-child('+str(num)+') > div > a > span.cost > span').text)
      except:
        pass

      wd.execute_script('window.open("about:blank", "_blank");')
      tabs = wd.window_handles

      wd.switch_to_window(tabs[1])
      info = get_info(num)
      try:
        mk_units.append(info[0])
      except:
        pass
      try:
        mk_weights.append(info[1])
      except:
        pass
      try:
        mk_shippings.append(info[2])
      except:
        pass
      try:
        mk_origin.append(info[3])
      except:
        pass
      try:
        mk_packagings.append(info[4])
      except:
        pass
      try:
        mk_shelf_lifes.append(info[5])
      except:
        pass
      try:
        mk_giudes.append(info[6])
      except:
        pass
      wd.switch_to_window(tabs[0])
      wd.close()  


    if page_idx==4:
      break
    
    wd.find_element_by_css_selector('#goodsList > div.layout-pagination > div > a.layout-pagination-button.layout-pagination-next-page').click()  #다음 페이지 클릭
    wd.implicitly_wait(10)

       

  return mk_menus, mk_prices, mk_units, mk_weights, mk_shippings, mk_origins, mk_packagings, mk_shelf_lifes, mk_giudes

mk_menus, mk_prices, mk_units, mk_weights, mk_shippings, mk_origins, mk_packagings, mk_shelf_life, mk_giude = scraping_all()

mk_menus

mk = webdriver.Chrome('chromedriver', options = chrome_options)
  
search_url = "https://www.kurly.com/shop/goods/goods_search.php?searched=Y&log=1&skey=all&hid_pr_text=&hid_link_url=&edit=Y&sword=%B9%D0%C5%B0%C6%AE&x=0&y=0"
mk.get(search_url)    #마켓컬리 '밀키트' 검색화면
mk.implicitly_wait(10)
mk.find_element_by_css_selector('#goodsList > div.list_goods > div > ul > li:nth-child(1) > div > div > div > button').click()
mk.implicitly_wait(10)
print(mk.find_element_by_css_selector('#sectionView > div > p.goods_name > strong').text)

print(mk.find_element_by_css_selector('#sectionView > div > p.goods_name > strong').text)
print(mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl.list.fst > dd').text)
print(mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(2) > dd').text)
print(mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(3) > dd').text)
print(mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(4) > dd').text)
print(mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(5) > dd').text)
print(mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(6) > dd').text)
print(mk.find_element_by_css_selector('#sectionView > div > div.goods_info > dl:nth-child(7) > dd').text)
# for label in wd.find_elements_by_class_name('fst'):
#   print(label.text)

# for rv_idx in range(6,13):
#   try:
#     print(mk.find_element_by_css_selector('#contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td.subject > div').text)
#   except:
#     pass

wd = webdriver.Chrome('chromedriver', options = chrome_options)
#contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child(7) > table > tbody > tr > td.subject > div
search_url = "https://www.kurly.com/shop/goods/goods_search.php?searched=Y&log=1&skey=all&hid_pr_text=&hid_link_url=&edit=Y&sword=%B9%D0%C5%B0%C6%AE&x=0&y=0"
wd.get(search_url)    #마켓컬리 '밀키트' 검색화면
wd.implicitly_wait(10)

wd.find_element_by_css_selector('#goodsList > div.list_goods > div > ul > li:nth-child(1) > div > a > span.name').click()  #상품 페이지 클릭
wd.implicitly_wait(10)

for page in range(1,4):
  for rv_idx in range(6,13):
    try:
      print(wd.find_element_by_css_selector('contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td.subject > div.fst').text)
    except:
      pass
      # try:
      #   reviewers.append(wd.find_element_by_css_selector('contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td:nth-child(9)').text)
      # except:
      #   pass
      # try:
      #   review_dates.append(wd.find_element_by_css_selector('contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td.time').text)
      # except:
      #   pass
      # try:
      #   review_helps.append(wd.find_element_by_css_selector('#contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td:nth-child(11) > span').text)
      # except:
      #   pass
      # try:
      #   review_views.append(wd.find_element_by_css_selector('#contents-wrapper > div.xans-element-.xans-product.xans-product-additional.detail_board > div > form > div:nth-child('+str(rv_idx)+') > table > tbody > tr > td:nth-child(12) > span').text)
      # except:
      #   pass

  wd.find_element_by_css_selector('#contents-wrapper > div.board_pg_area > a.layout-pagination-button.layout-pagination-next-page').click()
  wd.implicitly_wait(10)

